{"version":3,"sources":["components/game/Game.js","App.js","index.js"],"names":["Game","state","matrix","isStarted","getRandomNumber","size","newMatrix","i","matrixBlock","randomNumber","Math","floor","random","push","startGame","gameSize","_this","setState","Object","objectSpread","handlerRefresh","handlerBack","clearCell","j","value","toConsumableArray","_this2","this","_this$state","react_default","a","createElement","Fragment","className","map","row","index","key","col","onClick","style","color","React","Component","App","components_game_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ccabae1.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Game.css\";\n\nclass Game extends React.Component {\n  state = {\n    matrix: [],\n    isStarted: false\n  };\n\n  getRandomNumber = size => {\n    let newMatrix = [];\n    for (let i = 0; i < size; i++) {\n      let matrixBlock = [];\n      for (let i = 0; i < size; i++) {\n        let randomNumber = Math.floor(Math.random() * 100 + 1);\n        if (randomNumber > 0 && randomNumber <= 25) {\n          matrixBlock.push(1);\n        } else if (randomNumber >= 26 && randomNumber <= 50) {\n          matrixBlock.push(2);\n        } else if (randomNumber >= 51 && randomNumber <= 75) {\n          matrixBlock.push(3);\n        } else {\n          matrixBlock.push(4);\n        }\n      }\n      newMatrix.push(matrixBlock);\n    }\n\n    return newMatrix;\n  };\n\n  startGame = gameSize => {\n    this.setState({\n      ...this.state,\n      matrix: this.getRandomNumber(gameSize),\n      isStarted: !this.state.isStarted,\n      size: gameSize\n    });\n  };\n\n  handlerRefresh = () => {\n    this.setState({\n      ...this.state,\n      matrix: this.getRandomNumber(this.state.size)\n    });\n  };\n\n  handlerBack = () => {\n    this.setState({ ...this.state, isStarted: !this.state.isStarted });\n  };\n\n  clearCell = (i, j, value) => {\n    if (\n      !this.state.matrix[i] ||\n      !this.state.matrix[i][j] ||\n      this.state.matrix[i][j] !== value\n    ) {\n      return;\n    }\n\n    let matrix = [...this.state.matrix];\n\n    matrix[i][j] = null;\n\n    this.setState({\n      matrix\n    });\n\n    this.clearCell(i + 1, j, value);\n    this.clearCell(i - 1, j, value);\n    this.clearCell(i, j + 1, value);\n    this.clearCell(i, j - 1, value);\n  };\n\n  render() {\n    const { matrix, isStarted } = this.state;\n    return (\n      <>\n        {isStarted ? (\n          <div className=\"App\">\n            {matrix.map((row, i) => (\n              <div className=\"table\" index={i} key={i}>\n                {row.map((col, j) => {\n                  switch (col) {\n                    case 1:\n                      return (\n                        <span\n                          onClick={() => this.clearCell(i, j, col)}\n                          key={j}\n                          className=\"itemContainer diamond\"\n                          style={{ color: \"red\" }}\n                        >\n                          &#9826;\n                        </span>\n                      );\n                    case 2:\n                      return (\n                        <span\n                          onClick={() => this.clearCell(i, j, col)}\n                          key={j}\n                          className=\"itemContainer heart\"\n                          style={{ color: \"red\" }}\n                        >\n                          &#9829;\n                        </span>\n                      );\n                    case 3:\n                      return (\n                        <span\n                          onClick={() => this.clearCell(i, j, col)}\n                          key={j}\n                          className=\"itemContainer spade\"\n                        >\n                          &#9828;\n                        </span>\n                      );\n                    case 4:\n                      return (\n                        <span\n                          onClick={() => this.clearCell(i, j, col)}\n                          key={j}\n                          className=\"itemContainer club\"\n                        >\n                          &#9827;\n                        </span>\n                      );\n                    default:\n                      return (\n                        <span key={j} className=\"itemContainer club\">\n                          {\"\"}\n                        </span>\n                      );\n                  }\n                })}\n              </div>\n            ))}\n            <button onClick={this.handlerRefresh}>Reset</button>\n            <button onClick={this.handlerBack}>Back</button>\n          </div>\n        ) : (\n          <>\n            <h3>Choose your field, please</h3>\n            <button onClick={() => this.startGame(3)}>3x3</button>\n            <button onClick={() => this.startGame(6)}>6x6</button>\n            <button onClick={() => this.startGame(9)}>9x9</button>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\n\nimport Game from \"./components/game/Game\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}